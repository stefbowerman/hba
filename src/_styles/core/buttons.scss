// stylelint-disable selector-no-qualifying-type

.btn {
  position: relative;
  display: inline-block;
  text-transform: uppercase;
  color: $link-color;
  color: var(--link-color, $link-color);
  font-family: $btn-font-family;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  padding: 0 8px 2px;
  border-radius: 0;
  border: none;
  cursor: pointer;

  &:before,
  &:after {
    position: absolute;
    top: -1px;
  }

  &:before {
    content: '[';
    left: 0;
  }

  &:after {
    content: ']';
    right: 0;
  }

  @include has-hover {
    &:hover
    {
      background-color: $black;
      color: $white;
    }
  }

  &.is-active {
    background-color: $black;
    color: $white;
  }

  // Disabled comes first so active can properly restyle
  &:disabled,
  &.is-disabled {
    cursor: $cursor-disabled;

    @include has-hover {
      &:hover,
      &:focus {
        color: $link-color;
        color: var(--link-color, $link-color);
        background-color: transparent;
      }
    }
  }

  &:focus {
    outline: 0;
  }
}

.btn-primary {
  background-color: $black;
  color: $white;

  &:disabled {
    &,
    &:hover {
      background-color: $white;
      color: $black;
    }
  }

  @include has-hover {
    &:hover {
      &:not(:disabled) {
        background-color: $black;
        color: $white;
      }
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

.btn-block {
  display: block;
  width: 100%;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}
