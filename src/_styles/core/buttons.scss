// stylelint-disable selector-no-qualifying-type

.btn {
  position: relative;
  display: inline-block;
  text-transform: uppercase;
  user-select: none;
  color: $body-color;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  padding: 0 8px 2px;
  border-radius: 0;
  border: none;
  cursor: pointer;

  &:before,
  &:after {
    position: absolute;
    top: 0;
  }

  &:before {
    content: '[';
    left: 0;
  }

  &:after {
    content: ']';
    right: 0;
  }

  &:hover,
  &:focus,
  &.is-hovered {
    background-color: $white;
    color: $black;
  }

  &.is-active {
    background-color: $black;
    color: $white;
  }

  // Disabled comes first so active can properly restyle
  &:disabled {
    cursor: $cursor-disabled;

    &:hover {
      color: $body-color;
      background-color: transparent;
    }
  }

  &:focus {
    outline: 0;
  }
}

.btn-alt {
  background-color: $white;
  color: $black;

  &:hover,
  &:focus,
  &.is-hovered,
  &.is-active {
    background-color: $black;
    color: $white;
  }

  &:disabled {
    &:hover {
      background-color: $white;
      color: $black;
    }
  }
}

// Highlight buttons only show the pseudo elements when an active state is applied to them
.btn-highlight {
  &:before,
  &:after {
    opacity: 0;
  }

  &.is-active {
    background-color: transparent;
    color: $body-color;

    &:before,
    &:after {
      opacity: 1;
    }
  }
}



// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

.btn-block {
  display: block;
  width: 100%;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}
